---------------------------
NXP fast path IPSec network
---------------------------

IPSec implementation is based on option3(Referring to README)

Gateway is one generic Linux machine to run as VPN server.
Application with nFP preloaded runs on EP to negotiates with gateway to setup Security link.

0001-net-xfrm-Bypass-xfrm.patch need be applied(maybe manually) on EP kernel to
bypass kernel crypto and change TCP MSS.

1. Build:
--------------------------------------------

1) Build dpdk from (https://github.com/NXP/dpdk/commits/22.11-qoriq/):
  $ export CROSS=aarch64-linux-gnu-
  $ meson arm64-build --cross-file config/arm/arm64_dpaa_linux_gcc -Dc_args="-Werror" -Dusr_def_priority_last=60000 -Dexamples=all -Dprefix=/your/dpdk/install/folder
  $ ninja -C arm64-build install

2) Build dpdk-nfp:
  $ cmake . -Bbuild -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DDPDK_INSTALL=/your/dpdk/install/folder
  $ make -C build
        #Generate build/lib/libnfp.so

2. Install strongswan-swanctl on both gateway and endpoint:
--------------------------------------------

  $ apt-get install strongswan-swanctl

3. Gateway setup:
--------------------------------------------

  # Support rekey from gateway by "ipsec-gw.conf".
  $ Copy ipsec-gw.conf to /etc/ipsec.conf
  $ Copy ipsec.secrets to /etc/ipsec.secrets
  $ ifconfig ethx 1.1.1.1 up(security port)
  $ ip addr add 2.1.1.1/16 dev ethx
  $ route del -net 2.1.0.0 netmask 255.255.0.0 dev ethx
  $ ipsec restart

4. EP platform setup:
--------------------------------------------

  $ Copy ipsec-ep.conf to /etc/ipsec.conf
  $ Copy ipsec.secrets to /etc/ipsec.secrets

  $ export DPRC=dprc.2
  $ export MAX_QUEUES=8
  $ export FS_ENTRIES=8
  $ export MAX_TCS=1
  $ export DPSECI_QUEUES=8
  $ source ./dynamic_dpl.sh dpni-dpni dpni dpmac.x #DPMAC as external port.
    or
  $ source ./dynamic_dpl.sh dpni-dpni dpni         #PCIe EP as external port.
     #Assume the DPNIs created are dpni.a-dpni.b, dpni.c, dpni.d(dpmac.x).
  $ ls-addni dpni.c
     #Assume the kernel interface created is ethx.
  $ ifconfig ethx 1.1.1.2 up
  $ ip addr add 2.1.1.2/16 dev ethx
  $ route del -net 2.1.0.0 netmask 255.255.0.0 dev ethx
  $ echo 1 > /proc/sys/net/core/xfrm_bypass

5. Test application(iperf3) based on upon configurations, multiple sockets and bi-directions are supported:
   User can verify by parameter "[--bidir] [-P 2]" of iperf3 client mode:
--------------------------------------------

1) server mode on gateway and client mode on EP:
----------

Server on gateway:
  $ iperf3 -s

Client on EP:
  $ LD_PRELOAD=./libnfp.so iperf3 -c 2.1.1.1 -i 1 -t 100 -u -b 10G -l 64 [--bidir] [-P 2]
  $ ipsec restart #(Run from another terminal)

2) server mode on EP and client mmode on gateway:
---------

Server on EP:
  $ LD_PRELOAD=./libnfp.so iperf3 -s
  $ ipsec restart #(Run from another terminal)

Client on gateway:
  $ iperf3 -c 2.1.1.2 -i 1 -t 100 -u -b 10G -l 64 [--bidir] [-P 2]

3) Run network tools based on TCP protocol between gateway and EP while running iperf(udp or tcp) test.
